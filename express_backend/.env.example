# Server
PORT=3001
HOST=0.0.0.0
NODE_ENV=development

# MongoDB Atlas connection string
# Example: mongodb+srv://<username>:<password>@<cluster-url>/<db-name>?retryWrites=true&w=majority&appName=Cluster0
MONGODB_URI=

# JWT secret for authentication (to be used later by auth endpoints)
JWT_SECRET=change-me-super-secret

# CORS origins (comma-separated). Use * for all in development.
CORS_ORIGIN=*

# Seed admin credentials
SEED_ADMIN_EMAIL=admin@example.com
SEED_ADMIN_PASSWORD=ChangeMe123!
```

Explanation: Add backend README notes for DB setup and seeding
````write file="admin-dashboard-and-data-insights-4332-4341/express_backend/README.md"
# Express Backend

This backend powers the admin dashboard API. It uses Express.js and MongoDB Atlas via Mongoose.

## Getting Started

1. Install dependencies:
   - npm install

2. Copy env example:
   - cp .env.example .env
   - Fill in MONGODB_URI and adjust other values as needed.

3. Run in development:
   - npm run dev

4. Generate/refresh OpenAPI (optional for docs):
   - npm run generate:openapi

5. Access Swagger docs:
   - http://localhost:3001/docs

## Environment Variables

See .env.example for all variables:
- PORT, HOST, NODE_ENV
- MONGODB_URI (required)
- JWT_SECRET
- CORS_ORIGIN
- SEED_ADMIN_EMAIL, SEED_ADMIN_PASSWORD

## Database

Connection is managed in src/config/db.js. Mongoose models:
- src/models/User.js
- src/models/Order.js

## Seed Data

Seed script creates an admin user and sample users and orders.

- npm run seed

Requires:
- MONGODB_URI
- SEED_ADMIN_EMAIL
- SEED_ADMIN_PASSWORD

## Project Scripts

- start: Run server
- dev: Run server with nodemon
- seed: Seed database
- generate:openapi: Create interfaces/openapi.json from JSDoc comments

